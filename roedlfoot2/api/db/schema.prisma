datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:
// model UserExample {
//   id    Int     @id @default(autoincrement())
//   email String  @unique
//   name  String?
// }

model User {
  id       Int    @id @default(autoincrement())
  nickname String
  email    String @unique
  avatar   String
  scoreind Int
  scoregrp Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  matchesind Match[] @relation(["User1PlayedMatch", "User2PlayedMatch"])

  matchesgrp Match[] @relation(["User1PlayedMatch", "User2PlayedMatch", "User3PlayedMatch", "User4PlayedMatch"])

  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
}

model Matchind {
  id      Int    @id @default(autoincrement())
  user1   User   @relation("User1PlayedMatch", fields: [user1Id], references: [id])
  user1Id Int    @unique
  user2   User   @relation("User2PlayedMatch", fields: [user2Id], references: [id])
  user2Id Int    @unique
  player1 String
  player2 String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Matchgrp {
  id      Int  @id @default(autoincrement())
  user1   User @relation("User1PlayedMatch", fields: [user1Id], references: [id])
  user1Id Int  @unique
  user2   User @relation("User2PlayedMatch", fields: [user2Id], references: [id])
  user2Id Int  @unique

  player1 String
  player2 String

  player1 String
  player2 String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
