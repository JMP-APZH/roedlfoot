datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id             Int           @id @default(autoincrement())
  username       String        @unique
  fullName       String?
  email          String?       @unique
  hashedPassword String?
  salt           String?
  refreshToken   String?
  // tournamentsA   Participant[] @relation("TournamentsATeamA")
  // tournamentsB   Participant[] @relation("TournamentsBTeamB")
  // tournamentId   Int?
  Team           Team?         @relation(fields: [teamId], references: [id])
  teamId         Int?
  // Participant    Participant[]
}

// Define the Tournament model
// model Tournament {
//   id          Int           @id @default(autoincrement())
//   name        String
//   startDate   DateTime
//   endDate     DateTime
//   teams       Team[]
//   Participant Participant[]
// }

// Define the Team model for the tournament teams
model Team {
  id           Int           @id @default(autoincrement())
  // tournament   Tournament    @relation(fields: [tournamentId], references: [id])
  // tournamentId Int
  players      User[] // Players in the team
  score        Int           @default(0)
  participants Participant[]

  match   Match @relation(fields: [matchId], references: [id])
  matchId Int
}

// Define the Participant model for keeping track of user-team associations
model Participant {
  id           Int        @id @default(autoincrement())
  // user         User       @relation(fields: [userId], references: [id])
  // tournament   Tournament @relation(fields: [tournamentId], references: [id])
  team         Team       @relation(fields: [teamId], references: [id])
  userId       Int
  // tournamentId Int
  teamId       Int
  // teamA        User?      @relation("TournamentsATeamA", fields: [userId], references: [id], map: "teamA_user")
  // teamB        User?      @relation("TournamentsBTeamB", fields: [userId], references: [id], map: "teamB_user")

  match   Match @relation(fields: [matchId], references: [id])
  matchId Int
}

model Match {
  id           Int           @id @default(autoincrement())
  name         String
  startDate    DateTime
  endDate      DateTime
  participants Participant[]
  Team         Team[]
}
